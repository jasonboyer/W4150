adbeWithDate<-data.frame(adbe$Close, timeDate(stringr::str_c(adbe$Date), format="%d-%B-%y"))
summary(adbeWithDate)
tslm(Close ~ trend,data=adbeWithDate)
tslm(adbeWithDate$Close ~ trend,data=adbeWithDate)
tslm(adbeWithDate ~ trend,data=adbeWithDate)
tslm(adbeWithDate ~ trend)
souvenir <- scan("http://robjhyndman.com/tsdldata/data/fancy.dat")
souvenir
adbeTimeSeries <- ts(adbeWithDate$adbe.Close, adbeWithDate$GMT.x..i..)
adbeWithDate<-data.frame(adbe$Close, as.Date(as.character(adbe$Date), format="%d-%B-%y"))
summary(adbeWithDate)
adbeWithDate$Close <- (adbe$Close)
adbeWithDate$Date<-as.Date(as.character(adbe$Date), format="%d-%B-%y")
summary(adbeWithDate)
adbeTimeSeries <- ts(adbeWithDate$adbe.Close, adbeWithDate$Date)
library(zoo)
adbeZoo <- with(adbeWithDate, zoo(Close, order.by = Date))
summary(adbeZoo)
as.ts(adbeZoo)
adbeTimeSeries<-as.ts(adbeZoo)
tslm(adbeTimeSeries ~ trend)
ts.plot(adbeTimeSeries ~ trend)
ts.plot(adbeTimeSeries)
ts.plot(adbeTimeSeries, na.action=NULL)
ts.plot(adbeTimeSeries, na.omit)
ts.plot(adbeTimeSeries, na.action=na.omit)
ts.plot(adbeTimeSeries)
adbeTimeSeries<-as.ts(adbeZoo, na.action(na.omit))
ts.plot(adbeTimeSeries)
adbeTimeSeries<-as.ts(adbeZoo, na.action=NULL)
ts.plot(adbeTimeSeries)
plot.new()
ts.plot(adbeTimeSeries)
ts.plot(adbeTimeSeries, xlab=as.Date.dates)
ts.plot(adbeTimeSeries, xlab=as.Date.date)
ts.plot(adbeTimeSeries, xlab=format(index(adbeZoo)))
ts.plot(adbeTimeSeries, axis(1, at=1:20, labels=format(index(adbeZoo))))
plot.new()
ts.plot(adbeTimeSeries, axis(1, at=1:251, labels=format(index(adbeZoo))))
adbeTimeSeries
summary(adbeTimeSeries)
plot.ts(adbeTimeSeries, axis(1, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(index(adbeTimeSeries))))
ts.plot(adbeTimeSeries, axis(1, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(index(adbeTimeSeries))))
ts.plot(adbeTimeSeries, axis(2, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(index(adbeTimeSeries))))
ts.plot(adbeTimeSeries, axis(0, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(index(adbeTimeSeries))))
ts.plot(adbeTimeSeries, axis(1, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(as.Date(index(adbeTimeSeries)))))
plot.new()
ts.plot(adbeTimeSeries, axis(1, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(as.Date(index(adbeTimeSeries)))))
ts.plot(adbeTimeSeries, xlab=format(index(adbeZoo)))
ts.plot(adbeTimeSeries, axis(1, at=seq(min(index(adbeTimeSeries)),max(index(adbeTimeSeries))), labels=format(as.Date(index(adbeTimeSeries)))))
ts.plot(adbeTimeSeries)
plot(adbeZoo, axis(1, index(adbeZoo), format(index(adbeZoo), "%b %d"), cex.axis = .7))
plot(adbeZoo, axis(1, index(adbeZoo), format(index(adbeZoo), "%b %d")))
ts.plot(adbeTimeSeries)
abline(lm(adbeTimeSeries ~ trend), add=TRUE)
adbeTimeSeries
abline(lm(adbeTimeSeries ~ diff(log(adbeTimeSeries))), add=TRUE)
diff(log(adbeTimeSeries))
length(adbeTimeSeries)
plot.ts(diff(log(adbeTimeSeries)))
acf(adbeTimeSeries)
acf(adbeTimeSeries, na.action=NULL)
acf(adbeTimeSeries, na.pass)
acf(adbeTimeSeries, na.omit)
acf(adbeTimeSeries, na.action=na.omit)
acf(adbeTimeSeries, na.action=na.remove)
acf(adbeTimeSeries, na.remove)
na.remove(adbeTimeSeries)
library(tseries)
na.remove(adbeTimeSeries)
acf(na.remove(adbeTimeSeries))
abline(lm(na.remove(adbeTimeSeries) ~ diff(log(na.remove(adbeTimeSeries)))))
abline(lm(na.remove(adbeTimeSeries) ~ diff(log(na.remove(adbeTimeSeries)))))
length(adbeTimeSeries)
adbeTimeSeries[1:362]
length(adbeTimeSeries[1:362])
length(adbeTimeSeries[2:362])
abline(lm(na.remove(adbeTimeSeries[2:length(adbeTimeSeries)]) ~ diff(log(na.remove(adbeTimeSeries)))))
adbeLm<-lm(na.remove(adbeTimeSeries[2:length(adbeTimeSeries)]) ~ diff(log(na.remove(adbeTimeSeries))))
adbeLm
plot.new()
ts.plot(adbeTimeSeries[2,length(adbeTimeSeries)])
ts.plot(adbeTimeSeries)
ts.plot(adbeTimeSeries[2,length(adbeTimeSeries)])
ts.plot(adbeTimeSeries[2:length(adbeTimeSeries)])
plot.new()
ts.plot(adbeTimeSeries[2,length(na.remove(adbeTimeSeries)])
ts.plot(adbeTimeSeries[2,length(na.remove(adbeTimeSeries))])
ts.plot(adbeTimeSeries[2:length(na.remove(adbeTimeSeries))])
ts.plot(na.remove(adbeTimeSeries)[2:length(na.remove(adbeTimeSeries))])
adbeBusiness<-na.remove(adbeTimeSeries)
plot.new()
ts.plot(adbeBusiness[2:length(adbeBusiness)])
adbeLm<-lm(adbeBusiness[2:length(adbeBusiness)] ~ diff(log(adbeBusiness)))
adbeLm
abline(adbeLm)
coefficients(adbeLm)
abline(coefficients(adbeLm))
adbeBusiness
adbeBusiness$Start
ts(adbeBusiness)
ts(adbeBusiness, start=12000)
adbeBusiness
ts(adbeBusiness, start=16755)
t<-seq(16755, 16755+250, frequency = 1)
t
adbeBusiness
adbeLm<-lm(adbeBusiness ~ t)
adbeLm
lines(adbeLm)
lines(adbeLm$fitted.values)
adbeLm$fitted.values
plot.new()
plot(adbeBusiness)
lines(adbeLm<-lm(adbeBusiness ~ t))
lines(adbeLm$fitted.values)
adbeLm
t<-seq(2015-11-15, 2016-11-15)
t
t<-seq(as.Date("2015-11-15"), as.Date("2016-11-15"))
t<-seq(as.Date("2015-11-15") to as.Date("2016-11-15") by day)
stl(adbeBusiness, s.window="per")
PlotPrice(dfStock, strSymbol)<-function(dfStock, strSymbol) {
plot(as.Date(dfStock$Date, "%Y-%M"), dfStock$Close, xlab="Date",
ylab=paste(strSymbol, "closing price", type=line, col="maroon" ))
}
PlotPrice<-function(dfStock, strSymbol) {
plot(as.Date(dfStock$Date, "%Y-%M"), dfStock$Close, xlab="Date",
ylab=paste(strSymbol, "closing price", type=line, col="maroon" ))
}
plot.new()
PlotPrice(adbe, "ADBE")
PlotPrice<-function(dfStock, strSymbol) {
plot(as.Date(dfStock$Date, "%Y-%M"), dfStock$Close, xlab="Date",
ylab=paste(strSymbol, "closing price"), type=line, col="maroon" )
}
PlotPrice(adbe, "ADBE")
timedate(adbe$Date)
load("Project.R")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
adbe<-ReadStock("adbe")
PlotPrice(adbe, "ADBE")
adbeWithDate
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
adbe<-ReadStock("adbe")
PlotPrice(adbe, "ADBE")
summary(adbe)
foo<-data.frame(Date=adbe$GMT.x..i..)
summary(foo)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
adbe<-ReadStock("adbe")
summary(adbe)
foo<-ReadStock("adbe")
summary(foo)
ReadStock
filename <- paste("../data/","adbe","/","symbol"adbe,".csv", sep="")
filename <- paste("../data/","adbe","/","adbe",".csv", sep="")
filename
prices<-read.csv(file=filename, head=TRUE, sep=",")
summary(prices)
df<-dplyr::select(prices, Date, Close)
summary(df)
foo<-data.frame(Close=df$Close, Date=timeDate(stringr::str_c(df$Date),format="%d-%B-%y"))
summary(foo)
foo<-data.frame(Close=df$Close, Bar=timeDate(stringr::str_c(df$Date),format="%d-%B-%y"))
summary(foo)
foo<-data.frame(Bar=df$Close, Far=timeDate(stringr::str_c(df$Date),format="%d-%B-%y"))
summary(foo)
summary(foo[1])
summary(foo[2])
summary(foo[2].names)
summary(foo[names])
summary(df)
summary(df)
foo<-data.frame(Bar=df$Close, Far=timeDate(stringr::str_c(df$Date),format="%d-%B-%y"))
boo<-data.frame(Close=foo$Bar, Date=foo[2])
summary(boo)
colnames(foo)
colnames(foo)<-c("Close", "Date")
summary(foo)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
summary(prices)
foo<-ReadStock("adbe")
summary(foo)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
foo<-ReadStock("adbe")
summary(foo)
PlotPrice(foo, "ADBE")
plot(foo$Date, foo$Close)
plot(foo$Date, foo$Close, type=line())
plot(foo$Date, foo$Close, type=line)
plot(foo$Date, foo$Close, type=l)
plot(foo$Date, foo$Close, type="l")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
PlotPrice(foo, "ADBE")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
PlotPrice(foo, "ADBE")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
plot.new()
PlotPrice(foo, "ADBE")
logfoo<-data.frame(log(foo$Close), foo$Date)
PlotPrice(logfoo, "ADBE")
summary(logfoo)
logfoo<-data.frame(Close=log(foo$Close), Date=foo$Date)
summary(logfoo)
PlotPrice(logfoo, "ADBE")
logfoo<-data.frame(Close=log(foo$Close), Date=foo$Date, Val=c(1:))
logfoo<-data.frame(Close=log(foo$Close), Date=foo$Date, Val=c(1:length(foo)))
logfoo<-data.frame(Close=log(foo$Close), Date=foo$Date, Val=nrow(foo)))
logfoo<-data.frame(Close=log(foo$Close), Date=foo$Date, Val=nrow(foo))
summary(logfoo)
logfoo<-data.frame(Close=log(foo$Close), Date=foo$Date)
logfoo$Val<-seq.int(nrow(logfoo))
summary(logfoo)
lm(logfoo$Close ~ logfoo$Val)
lm(logfoo$Val ~ logfoo$Close)
lm(logfoo$Close ~ logfoo$Val)
abline(lm(logfoo$Close ~ logfoo$Val))
regress<-lm(logfoo$Close ~ logfoo$Val)
coeff<-coefficients(regress)
coeff
abline(regress, col="black")
PlotPrice(logfoo, "ADBE")
plot.new()
PlotPrice(logfoo, "ADBE")
abline(regress, col="black")
plot(logfoo$Close ~ logfoo$Val)
plot(logfoo$Close ~ logfoo$Val, type="l")
abline(regress, col="black")
pl<-plot(logfoo$Close ~ logfoo$Val, type="l")
pl
typeof(pl)
PlotPrice(logfoo, "ADBE")
abline(regress, col="black")
plot()
plot(0,0)
abline(regress, col="black")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
i=plot.new()
i
i.title="foo"
plot(i)
i.plot()
PlotPrice(logfoo, "ADBE")
i=PlotPrice(logfoo, "ADBE")
i
i=PlotPrice(logfoo, "ADBE")
abline(regress, col="black")
regress
abline(lm(logfoo$Close~logfoo$Val))
graphics::abline(lm(logfoo$Close~logfoo$Val))
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
i=plot.new()
i=PlotPrice(logfoo, "ADBE")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
i=plot.new()
i=PlotPrice(logfoo, "ADBE")
graphics::abline(lm(logfoo$Close~logfoo$Val))
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
i=plot.new()
i=PlotPrice(logfoo, "ADBE")
msft=ReadStock("msft")
summary(msft)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
msft=ReadStock("msft")
summary(msft)
adbe=ReadStock("adbe")
summary(adbe)
i=PlotPrice(logfoo, "MSFT")
i=PlotPrice(msft, "MSFT")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
msft=ReadStock("msft")
summary(msft)
adbe=ReadStock("adbe")
summary(adbe)
i=PlotPrice(logfoo, "MSFT")
i=PlotPrice(adbe, "ADBE")
t.test(adbe$Close, msft$Close)
adbeLog = LogReturn(adbe$Close)
msftLog = LogReturn(msft$Close)
summary(adbeLog)
summary(msftLog)
PlotHistogram(adbeLog)
PlotHistogram(msftLog)
PlotVsNormal(adbeLog)
PlotVsNormal(msftLog)
plot.new()
PlotHistogram(msftLog)
PlotVsNormal(msftLog)
t.test(adbeLog, msftLog)
t.test(adbeLog, adbeLog)
svs<-lm(msftLog ~ adbeLog)
svs
i=PlotPrice(adbe, "ADBE")
i=PlotPrice(msft, "MSFT")
plot.new()
abline(svs)
plot(msftLog ~ adbeLog)
qqline(msftLog ~ adbeLog)
qqline(msftLog)
qqnorm(msftLog)
qqline(msftLog)
qqnorm(adbeLog)
qqline(adbeLog)
source(Project.R)
source("Project.R")
source("Project.R")
source("Project.R")
source("Project.R")
plot.new()
source("Project.R")
run()
#   tseries - time series analysis and computational finance
library(dplyr)
library(dplyr)
library(dplyr)library(lattice)library(forecast)library(ggplot2)library(lattice)library(tseries)adbe<-ReadStock("adbe")msft<-ReadStock("msft")adbeLog<-LogReturn(adbe$Close)msftLog<-LogReturn(msft$Close)PlotHistogram(adbeReturn)PlotVsNormal(adbeReturn)PlotHistogram(msftReturn)PlotVsNormal(msftReturn)
plot(msftLog ~ adbeLog)
abline(msftLog ~ adbeLog)
abline(coefficients(msftLog ~ adbeLog))
abline(lm(msftLog ~ adbeLog))
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
plot.new()
PlotTwoStockRegression("adbe", "msft")
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
plot.new()
PlotTwoStockRegression("adbe", "msft")
plot.new()
foo<-PlotTwoStockRegression("adbe", "msft")
foo
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
plot.new()
foo<-PlotTwoStockRegression("adbe", "msft")
foo
plot.new()
resid(foo)
plot(resid(foo), adbeLog)
plot(adbeLog,resid(foo))
abline(0,0)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
plot.new()
PlotResiduals(foo, adbeLog)
foo
summary(foo)
summary(foo)$r.squared
savehistory("~/Documents/2016/School/W4150/Project/2016-11-26.Rhistory")
i=plot.new()
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
PlotHistogram(adbeLog)
PlotVsNormal(adbeLog)
PlotMeanConfidenceIntervals(adbeLog)
PlotMeanConfidenceIntervals(adbeLog, 95)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
PlotMeanConfidenceIntervals(adbeLog, 95)
qnorm((100-95)/200)
qnorm((100-95)/200)*sd(adbeLog/sqrt(249))
qnorm((100-95)/200)*sd(adbeLog/sqrt(249))
95/200
.05/2
1-(100-95)/200
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
plot.new()
PlotHistogram(adbeLog)
PlotVsNormal(adbeLog)
PlotMeanConfidenceIntervals(adbeLog, 95)
normalLine = dnorm(adbeLog, mean(adbeLog), sd(adbeLog))
PlotHistogram(adbeLog)
plot(normalLine)
PlotHistogram(adbeLog)
curve(normalLine)
curve(dnorm(adbeLog, mean(adbeLog), sd(adbeLog)))
curve(dnorm(x, mean(adbeLog), sd(adbeLog)))
PlotHistogram(adbeLog)
curve(dnorm(x, mean(adbeLog), sd(adbeLog)), add=TRUE, col="maroon", lwd=2)
normalLine
normalLine[1]
normalLine[125]
dfLogReturn[1]
adbeLog[1]
i
lowerBound<- mean(adbeLog)-qnorm(1-(100-95)/200)*sd(dfLogReturn)/sqrt(length(dfLogReturn))
lowerBound<- mean(adbeLog)-qnorm(1-(100-95)/200)*sd(adbeLog)/sqrt(length(adbeLog))
lowerBound
sd(adbeLog)
upperBound<- mean(adbeLog)+qnorm(1-(100-95)/200)*sd(adbeLog)/sqrt(length(adbeLog))
upperBound
qnorm(1-(100-95)/200)*sd(adbeLog)/sqrt(length(adbeLog))
mean(adbeLog)
qn<-qnorm(1-(100-95)/200)*sd(adbeLog)/sqrt(length(adbeLog))
m<-mean(adbeLog)
qn+m
qn-m
m-qn
adbeLog <= upperBound & adbeLog >= lowerBound
(adbeLog <= upperBound) & (adbeLog >= lowerBound)
i<-(adbeLog[i] <= upperBound) & (adbeLog[i] >= lowerBound)
i
summary(i)
adbeLog[i]
i<-(adbeLog <= upperBound) & (adbeLog >= lowerBound)
i
foo<-adbeLog[i]
foo
mean=100; sd=15
lb=80; ub=120
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="n", xlab="IQ Values", ylab="",
main="Normal Distribution", axes=FALSE)
i <- x >= lb & x <= ub
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
PlotHistogram(adbeLog)
PlotVsNormal(adbeLog)
PlotMeanConfidenceIntervals(adbeLog)
PlotMeanConfidenceIntervals(adbeLog, 95)
lines(adbeLog)
lines(adbeLog,normalLine)
foo<-lines(adbeLog,normalLine)
foo
adbeLog
normalLine
adbe
order(adbeLog)
adbeLog[order(adbeLog)]
PlotHistogram(adbeLog)
PlotVsNormal(adbeLog)
lines(adbeLog[order(adbeLog)],normalLine)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
PlotHistogram(adbeLog)
PlotVsNormal(adbeLog)
PlotMeanConfidenceIntervals(adbeLog, 95)
savehistory("~/Documents/2016/School/W4150/Project/code/2016-11-26-2.Rhistory")
t.test(adbeLog, msftLog)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
MeanEqualityTest(adbeLog, msftLog)
MeanEqualityTest("adbe", "msft")
stockA
stockA <- ReadStock("adbe")
stockB <- ReadStock("msft")
stockA
logStockA <- LogReturn(stockA$Close)
logStockB <- LogReturn(stockB$Close)
t.test(stockA, stockB)
t.test(adbeLog, msftLog)
adbeLog
logStockA
t.test(adbeLog, stockB)
t.test(adbeLog, msftLog)
t.test(stockA, msftLog)
plot(logStockB ~ logStockA)
t.test(logStockA, logStockB)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
MeanEqualityTest("adbe", "msft")
ReadStock("gspc")
gspc<-ReadStock("gspc")
summary(gspc)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
gspc<-ReadStock("gspc")
gspc<-ReadStock("gspc", monthly=TRUE, ascending=TRUE)
summary gspc
summary(gspc)
prices<-read.csv(file="data/gspc/gspc.csv", head=TRUE, sep=",")
ls
adbe<-ReadStock("adbe")
summary(adbe)
prices<-read.csv(file="data/adbe/adbe.csv", head=TRUE, sep=",")
prices<-read.csv(file="../data/adbe/adbe.csv", head=TRUE, sep=",")
prices<-read.csv(file="../data/gspc/gspc.csv", head=TRUE, sep=",")
summary(prices)
dateTest<-as.Date(prices$Date)
dateTest<-as.Date(prices$Date, format="%Y-%m")
summary(dateTest)
dateTest<-timeDate(stringr::str_c(prices$Date, format="%Y-%m"))
dateTest<-timeDate(stringr::str_c(prices$Date), format="%Y-%m")
summary(dateTest)
foo<-stringr::str_c(df$Date)
summary(foo)
foo<-stringr::str_c(prices$Date)
summary(foo)
foo[1]
timeDate(foo, format="%Y-%m")
timeDate(foo[1], format="%Y-%m")
timeDate(foo[1], format="%Y-%M")
as.Date(foo[1], format="%Y-%M")
as.Date(foo[1], format="%Y-%m")
as.yearmon(foo[1], format="%Y-%m")
foo<-as.yearmon(foo[1], format="%Y-%m")
as.Date(foo)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
adbe<-ReadStock("adbe")
summary(adbe)
adbe[1]
adbe[2]
adbe$Date
rev(order(adbe$Date))
order(adbe$Date)
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
adbe<-ReadStock("adbe")
adbe<-ReadStock("adbe")
adbe$Date
order(adbe$Date)
adbe[order(adbe$Date)]
adbe[order(adbe$Date),]
debugSource('~/Documents/2016/School/W4150/Project/code/Project.R', echo=TRUE)
?debug
undebug()
sys.calls()
traceback()
undebug(eval)
undebug(evalq)
undebug(function)
